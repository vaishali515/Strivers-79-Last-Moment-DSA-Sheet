class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {

        int low = 1 ;
        int high = *max_element(piles.begin(), piles.end());
        int ans = high;
        while(low<high)
        {
            int mid = (low + high)/2;
            int count = 0;
            for(int i =0 ; i< piles.size() ; i++)
            {
                count += piles[i]/mid;
                if(piles[i]% mid != 0)
                {
                    count++;
                }
            }
            if(count <= h) 
            {
                high  = mid;
                ans = min(ans, mid);
                
            }

            else {
                low = mid + 1;
            }
        }
        return ans;
    }
};
